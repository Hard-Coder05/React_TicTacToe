{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"4OAIA,SAASA,EAAOC,GACb,OACD,wBACAC,UAAU,SACVC,QAASF,EAAME,QAFf,SAGGF,EAAMG,Q,IAKHC,E,kDACP,WAAYJ,GAAO,IAAD,8BACjB,cAAMA,IACDK,MAAM,CACVC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJO,E,+CAQlB,SAAYC,GACX,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,IAAYA,EAAQI,KAGtCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IAC1CE,KAAKG,SAAS,CACbR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,0BAIvB,SAAaC,GAAI,IAAD,OACd,OAAO,cAACX,EAAD,CACPI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAI,EAAKa,YAAYL,Q,oBAIhC,WACC,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAQzC,OALCU,EADEC,EACO,WAAaA,EAEb,iBAAmBN,KAAKN,MAAMI,QAAU,IAAM,KAIzD,gCACE,qBAAKR,UAAU,SAAf,SAAyBe,IACzB,sBAAKf,UAAU,YAAf,UACAU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAElB,sBAAKjB,UAAU,YAAf,UACAU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAElB,sBAAKjB,UAAU,YAAf,UACAU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GArDAC,IAAMC,WA4DpBC,E,4JACP,WACE,OACD,sBAAKpB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACD,cAACG,EAAD,MAEC,sBAAKH,UAAU,YAAf,UACD,wBACA,iC,GATkBkB,IAAMC,WAuBzB,SAASP,EAAgBP,GAW1B,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACrC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACvE,OAAOpB,EAAQkB,GAGhB,OAAO,KAtBNG,IAASC,OACV,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.3248da56.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props){\r\n\t  return (\r\n\t\t<button \r\n\t\tclassName=\"square\" \r\n\t\tonClick={props.onClick}>\r\n\t\t  {props.value}\r\n\t\t</button>\r\n\t  );\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tsquares: Array(9).fill(null),\r\n\t\t\txIsNext: true,\r\n\t\t};\r\n\t}\r\n\t\r\n\thandleClick(i) {\r\n\t\tconst squares = this.state.squares.slice();\r\n\t\tif (calculateWinner(squares) || squares[i]) {\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t  squares[i] = this.state.xIsNext ? 'X' : 'O';\t  \r\n\t\tthis.setState({\r\n\t\t\tsquares: squares,\r\n\t\t\txIsNext: !this.state.xIsNext,\r\n\t\t});\r\n\t}\r\n\r\n\trenderSquare(i) {\r\n\t  return <Square \r\n\t  value={this.state.squares[i]} \r\n\t  onClick={()=>this.handleClick(i)}\r\n\t  />;\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst winner = calculateWinner(this.state.squares);\r\n\t\tlet status;\r\n\t\tif (winner) {\r\n\t\t  status = 'Winner: ' + winner;\r\n\t\t} else {\r\n\t\t  status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\t\t}\r\n\r\n\t  return (\r\n\t\t<div>\r\n\t\t  <div className=\"status\">{status}</div>\r\n\t\t  <div className=\"board-row\">\r\n\t\t\t{this.renderSquare(0)}\r\n\t\t\t{this.renderSquare(1)}\r\n\t\t\t{this.renderSquare(2)}\r\n\t\t  </div>\r\n\t\t  <div className=\"board-row\">\r\n\t\t\t{this.renderSquare(3)}\r\n\t\t\t{this.renderSquare(4)}\r\n\t\t\t{this.renderSquare(5)}\r\n\t\t  </div>\r\n\t\t  <div className=\"board-row\">\r\n\t\t\t{this.renderSquare(6)}\r\n\t\t\t{this.renderSquare(7)}\r\n\t\t\t{this.renderSquare(8)}\r\n\t\t  </div>\r\n\t\t</div>\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n\trender() {\r\n\t  return (\r\n\t\t<div className=\"game\">\r\n\t\t  <div className=\"game-board\">\r\n\t\t\t<Board />\r\n\t\t  </div>\r\n\t\t  <div className=\"game-info\">\r\n\t\t\t<div>{/* status */}</div>\r\n\t\t\t<ol>{/* TODO */}</ol>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n\t<Game />,\r\n\tdocument.getElementById('root')\r\n  );\r\n  \r\n  function calculateWinner(squares) {\r\n\tconst lines = [\r\n\t  [0, 1, 2],\r\n\t  [3, 4, 5],\r\n\t  [6, 7, 8],\r\n\t  [0, 3, 6],\r\n\t  [1, 4, 7],\r\n\t  [2, 5, 8],\r\n\t  [0, 4, 8],\r\n\t  [2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t  const [a, b, c] = lines[i];\r\n\t  if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\treturn squares[a];\r\n\t  }\r\n\t}\r\n\treturn null;\r\n  }"],"sourceRoot":""}